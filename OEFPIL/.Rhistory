paramplot.OEFPIL(output.form)
library("OEFPIL")
setwd("C:/Users/zamec/Desktop/OEFPIL/VojtoveZdenkine funkcie - cestina")
source("TACR_Rsource.R")
num <- 28
file_name <- paste("BV52_09_07_2019.txt_", num, ".unload.txt", sep="")
# 1, 2, 4, 5 ## problemove soubory pro data nize; nikde by ale algoritmus nemel havarovat
#file_name <- paste("./Data/UNHT-Cu_unload/kalibrace-hloubky-2014-nocontact-FD_", num, "_mn.unload.txt", sep="")
data <- read.delim(file = file_name, sep="", header = F, col.names = c("y", "x"))
id = num
unload.data = T
ucut = 0.98
lcut = 0.2
uh = 0.5
uF = 0.001
max.iter = 100
see.iter.val = F
th = 0.001
signif.level = 0.05
useNLS = T
# save.file.name = "Export_iter.Rdata"
## jmeno souboru zadavame jen v pripade, pokud chceme ulozit prubezna data z iterace
ICL <- FindIndentCurve(data, lcut = lcut, ucut = ucut, unload.data = unload.data)
## nemame-li k dispozici cista data, musime je vyseknout
## mame-li uz odtezovaci krivku, jiste oseknuti musime provest take
data.cut <- data.frame(ICL$f_orig, ICL$h_orig)
colnames(data.cut) <- c("y", "x")
## vytvoreni datoveho souboru, ktery ma pojmenovane sloupce - nutno provest
### kovarianci matice ###
vec.uni <- rep(1, length(data.cut$x))
CM <- CovMatrix(uh, uF, vec.uni, vec.uni)
## kovariancni matice vytvorena podle navrhu v algoritmu;
## v prubehu se nemeni
###########################################################################
### Vstupni list startovacich hodnot pro OEFPIL ###
###########################################################################
# f_orig <- ICL$f_orig # je v data.cut
# h_orig <- ICL$h_orig # je v data.cut
Fmax <- ICL$Fmax
hmax <- ICL$hmax
hmin <- ICL$hmin
# startovaci volba pro alpha, hp, m a podle navrhu v algoritmu
# (volba podle navrhu a korektni z fyzikalnho hlediska)
m.start <- 1.5
hp.start <- 0.9 * hmin
alpha.start <- Fmax / ((hmax - hp.start) ^ m.start)
start.val <- list(alpha=alpha.start, m=m.start, hp=hp.start)
# start.val <- c(alpha.start, m.start, hp.start)
names(start.val) <- c("alpha", "m", "hp")
form <- yy ~ alpha * (xx - hp) ^ m
###########################################################################
# OEFPIL ###
###########################################################################
typeof(data.cut)
data.cut1 <- as.matrix(data.cut)
colnames(data.cut1) <- c('[,1]','[,2]')
matrix(c(1,2,3,4), nrow = 2)
data.cut2 <- as.data.frame(data.cut)
names(data.cut2) <- c("yy","xx")
output.form <- OEFPIL(data.cut2, form, start.val, CM,  max.iter = max.iter,
see.iter.val = see.iter.val,
th = th, signif.level = signif.level, useNLS = F)
X <- lsf.str()
as.vector(X) # just for printing purposes, you can use the vector in rm()
rm(list=X)
paramplot.OEFPIL(output.form)
example("paramplot.OEFPIL")
curvplot.OEFPIL(output.form)
curvplot.OEFPIL(output.form, signif.level = 0.05)
curvplot.OEFPIL(output.form, signif.level = c(0.05,0.01))
confint(output.form)
confint(output.form, signif.level = c(0.01,0.05))
example("confint.OEFPIL")
confint(output.form, signif.level = c(0.01,"0.05"))
confint(output.form, signif.level = c(0.01,1))
confBands.OEFPIL(output.form)
(confBands.OEFPIL(output.form))
library(OEFPIL)
example("confBands.OEFPIL")
library(OEFPIL)
example("confBands.OEFPIL")
coef(output.form)
library(OEFPIL)
example("OEFPIL")
FindIndent
NanoIndent.OEFPIL(data)
example("NanoIndent.OEFPIL")
example("NanoIndent.OEFPIL")
library(OEFPIL)
library(OEFPIL)
example("NanoIndent.OEFPIL")
library(OEFPIL)
output.form
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
example("NanoIndet.OEFPIL")
exmaple("NanoIndent.OEFPIL")
example("NanoIndent.OEFPIL")
example("NanoIndent.OEFPIL")
library(OEFPIL)
example(NanoIndent.OEFPIL)
example("NanoIndent.OEFPIL")
library(OEFPIL)
example("NanoIndent.OEFPIL")
library(OEFPIL)
example("NanoIndent.OEFPIL")
library(OEFPIL)
example("OEFPIL")
example("OEFPIL")
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
example("OEFPIL")
FindIndentCurve()
library(OEFPIL)
library(OEFPIL)
example("OEFPIL")
example("OEFPIL")
curvplot(output.form)
curvplot.OEFPIL(output.form)
curvplot.OEFPIL(output.form, signif.level = 0.05)
library(OEFPIL)
example("curvplot.OEFPIL")
library(OEFPIL)
example("curvplot.OEFPIL")
library(OEFPIL)
example("curvplot.OEFPIL")
version()
version
library(OEFPIL)
output.form
example("ortresiduals.OEFPIL")
a <- ortresiduals.OEFPIL(output.form)
a <- ortresiduals.OEFPIL(output.form)
a
type(a)
typeo(a)
typeof(a)
library(OEFPIL)
library(OEFPIL)
example("ortresiduals.OEFPIL")
load("C:/Users/zamec/Desktop/OEFPIL/data/silica2098.RData")
example("ortresiduals.OEFPIL")
load("C:/Users/zamec/Desktop/OEFPIL/data/silica2098.RData", verbose = TRUE)
data(silica2098.RData)
h
silica2098 <- list(h = h,Fload = Fload)
silica2098
setwd("C:/Users/zamec/Desktop/OEFPIL/data")
save(silica2098, file = "C:/Users/zamec/Desktop/OEFPIL/data/silica2098.RData")
load(silica2098, verbose = TRUE)
load(silica2098.RData, verbose = TRUE)
load('silica2098.RData', verbose = TRUE)
data(silica2098)
data(silica2098.Rdata)
data(silica2098)
data('silica2098')
library(OEFPIL)
data("silica2098")
silica2098
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
attr(silica2098,h)
attr(silica2098,'h')
h
plot(h, Fload)
plot(h, Fload, main = 'Graph of nanoindented data')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'blue')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'blue', pch = '19')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'blue', pch = '10')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'blue', pch = '1')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'blue', pch = '20')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'blue', pch = '21')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'blue', pch = '21')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'blue', pch = '22')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'blue', pch = '19')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'blue', pch = '2')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'darkgreen', pch = '19')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'darkgreen')
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'darkgreen', pch = 19)
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'darkgreen', pch = 19, cex = 8)
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'darkgreen', pch = 19, cex = 1)
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'darkgreen', pch = 19, cex = 0.5)
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'darkgreen', pch = 3, cex = 0.5)
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'darkgreen', pch = 3, cex = 1)
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'darkgreen', pch = 2, cex = 1)
plot(h, Fload, main = 'Graph of nanoindented data', xlab = 'depth', ylab = 'Force', col = 'darkgreen', cex = 1)
library(OEFPIL)
example("silica2098")
library(OEFPIL)
example("silica2098")
read.table("selicaBerk.txt")
load("silica2098.RData")
attach('silica2098')
attach('silica2098.RData')
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
load("silica2098.RData")
attach('silica2098.RData')
data <- data.frame(x = h, y = Fload)
## Preparing parameter for OEFPIL function
max.iter = 100
see.iter.val = F
th = 0.001
signif.level = 0.05
useNLS = T
k <- dim(data)[1]
CM <- diag(rep(0.1,2*k))
m.start <- 1.5
hp.start <- 0.9
alpha.start <- 5
start.val <- list(alpha=alpha.start, m=m.start, hp=hp.start)
names(start.val) <- c("alpha", "m", "hp")
form <- y ~ alpha * (x - hp) ^ m
output.form <- OEFPIL(data.cut, form, start.val, CM,  max.iter = max.iter, see.iter.val = see.iter.val, th = th, signif.level = signif.level, useNLS = useNLS)
dim(data)
output.form <- OEFPIL(data.cut, form, start.val, CM = CM,  max.iter = max.iter, see.iter.val = see.iter.val, th = th, signif.level = signif.level, useNLS = useNLS)
output.form <- OEFPIL(data.cut, form, start.val,  max.iter = max.iter, see.iter.val = see.iter.val, th = th, signif.level = signif.level, useNLS = useNLS)
summary(output.form)
library(OEFPIL)
example("OEFPIL")
setwd("C:/Users/zamec/Desktop/OEFPIL/data")
read.table('silicaberk.txt')
read.table('silicaberk.txt', header = TRUE)
library(OEFPIL)
example("NanoIndent.OEFPIL")
library(OEFPIL)
example("NanoIndent.OEFPIL")
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
silica2098
as.dataframe(silica2098)
as.data.frame(silica2098)
silica2098 <- as.data.frame(silica2098)
save(silica2098, file = "C:/Users/zamec/Desktop/OEFPIL/data/silica2098.RData")
load(silica2098.RData)
setwd("C:/Users/zamec/Desktop/OEFPIL/data")
load(silica2098.RData, verbose = TRUE)
load('silica2098.RData', verbose = TRUE)
library(OEFPIL)
silica2098
attach(silica2098)
h
Fload
h
load(OEFPIL)
load('OEFPIL')
library('OEFPIL')
silica2098
attach(silica2098)
h
library(OEFPIL)
example("OEFPIL")
silica2098
load('\data\silica2098.RData')
load('.\data\silica2098.RData')
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
a
attach(a)
load('silica2098.RData')
load('\data\silica2098.RData')
load('silica2098.RData',.GlobalEnv)
library(silica2098)
library(OEFPIL)
load(silica2098)
load(silica2098.RData)
load('silica2098')
silica2098
load(data/silica2098.RData)
system.file("data", "silica2098.RData", package = "OEFPIL")
system.file("silica2098", "silica2098.RData", package = "OEFPIL")
system.file("silica2098.RData", package = "OEFPIL")
system.file(package = "OEFPIL")
path <- system.file(package = "OEFPIL") + '\data' + '\silica2098.RData'
path <- system.file(package = "OEFPIL") + '/data' + '/silica2098.RData'
path <- system.file(package = "OEFPIL")
path
path + 'a'
system.file('silica2098.RData','data',package = "OEFPIL")
system.file('data','silica2098.RData',package = "OEFPIL")
system.file('data',package = "OEFPIL")
system.file('data','silica2098.RData',package = "OEFPIL")
system.file('data','silica2098.RData',package = "OEFPIL")
system.file('data','silica2098',package = "OEFPIL")
system.file('data','silica2098.RData',package = "OEFPIL")
system.file('data','silicaBerk.txt',package = "OEFPIL")
system.file('data',package = "OEFPIL")
system.file('R',package = "OEFPIL")
system.file('R','vcov.OEFPIL.R',package = "OEFPIL")
system.file('R','vcov.OEFPIL',package = "OEFPIL")
system.file('R',"vcov.OEFPIL.R",package = "OEFPIL")
system.file("R","vcov.OEFPIL.R",package = "OEFPIL")
system.file("R","OEFPIL.R",package = "OEFPIL")
system.file("R","OEFPIL.R",package = "OEFPIL") + "/a"
file.path(system.file("R"package = "OEFPIL"),'OEFPIL.R')
library(OEFPIL)
example("OEFPIL")
load('silica2098.RData')
load('silica2098.RData')
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
read.table("./data/silicaBerk.txt", header = TRUE)
library(OEFPIL)
read.table("./data/silicaBerk.txt", header = TRUE)
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
library(OEFPIL)
example("OEFPIL")
example("NanoIndent.OEFPIL")
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
example("OEFPIL")
example("NanoIndent.OEFPIL")
library(OEFPIL)
example("NanoIndent.OEFPIL")
example("curvplot.OEFPIL")
example("summary.OEFPIL")
library(OEFPIL)
library(OEFPIL)
example("OEFPIL")
example("summary.lm")
¨getAnywhere(summary.lm())
¨getAnywhere(summary.lm)
¨getAnywhere("summary.lm")
¨getAnywhere("summary")
¨getAnywhere(summary)
¨getAnywhere(t.ts)
¨getAnywhere(t.ts)
5
¨getAnywhere(t.ts)
example("summary.OEFPIL")
example("summary.lm")
library(OEFPIL)
example("vcov.OEFPIL")
library(OEFPIL)
example("vcov.OEFPIL")
example("summary.lm")
example("vcov.OEFPIL")
library(OEFPIL)
library(OEFPIL)
example("vcov.OEFPIL")
library(OEFPIL)
example("vcov.OEFPIL")
library(OEFPIL)
example("vcov.OEFPIL")
example("summary.lm")
library(OEFPIL)
example("summary.lm")
example("vcov.OEFPIL")
library(OEFPIL)
example("vcov.OEFPIL")
example("vcov.OEFPIL")
library(OEFPIL)
library(OEFPIL)
example("vcov.OEFPIL")
library(OEFPIL)
example("vcov.OEFPIL")
library(OEFPIL)
example("vcov.OEFPIL")
library(OEFPIL)
example("vcov.OEFPIL")
library(OEFPIL)
library(OEFPIL)
example("vcov.OEFPIL")
library(OEFPIL)
library(OEFPIL)
example("summary.OEFPIL")
library(OEFPIL)
example("print.OEFPIL")
example("plot.OEFPIL")
example("ortresiduals.OEFPIL")
example("confint.OEFPIL")
example("confBands.OEFPIL")
library(OEFPIL)
example("confBands.OEFPIL")
library(OEFPIL)
example("confBands.OEFPIL")
example("confint.OEFPIL")
library(OEFPIL)
example("confBands.OEFPIL")
library(OEFPIL)
example("confBands.OEFPIL")
library(OEFPIL)
example("confBands.OEFPIL")
library(OEFPIL)
example("confBands.OEFPIL")
library(OEFPIL)
example("confBands.OEFPIL")
confBands(output.form)
confBands.OEFPIL(output.form)
confint(output.form)
confBands(output.form)
library(OEFPIL)
library(OEFPIL)
example("summary.OEFPIL")
example("vcov.OEFPIL")
example("print.OEFPIL")
example("plot.OEFPIL")
example("paramplot.OEFPIL")
example("ortresiduals.OEFPIL")
example("OEFPIL")
example("NanoIndent.OEFPIL")
example("curvplot.OEFPIL")
example("confint.OEFPIL")
example("confBands.OEFPIL")
example("coef.OEFPIL")
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
example("OEFPIL")
load("C:/Users/zamec/Desktop/OEFPIL-/OEFPIL/data/silica2098.RData")
View(data.cut)
silica2098
library(OEFPIL)
example("OEFPIL")
library(OEFPIL)
load("C:/Users/zamec/Desktop/OEFPIL-/OEFPIL/data/silica2098.RData")
example(OEFPIL)
devtools::build_manual()
library(OEFPIL)
devtools::build_manual()
devtools::Rd2latex()
devtools::test()
devtools::test()
print("test passed")
library(OEFPIL)
example("NanoIndent.OEFPIL")
silicaBerk
load("C:/Users/zamec/Desktop/OEFPIL-/OEFPIL/data/silica2098.RData")
setwd("C:/Users/zamec/Desktop/OEFPIL-/OEFPIL/data")
load("C:/Users/zamec/Desktop/OEFPIL-/OEFPIL/data/silica2098.RData")
silica2098
colnames(silica2098) <- c("Depth","Load")
silica2098
setwd("C:/Users/zamec/Desktop/OEFPIL-/OEFPIL/data")
save(silica2098, file = "C:/Users/zamec/Desktop/OEFPIL-/OEFPIL/data")
save(silica2098, file = "C:/Users/zamec/Desktop/OEFPIL-/OEFPIL/data/")
save(silica2098, file = "C:/Users/zamec/Desktop/OEFPIL-/OEFPIL/data/silica2098.Rdata")
load("C:/Users/zamec/Desktop/OEFPIL-/OEFPIL/data/silica2098.RData")
silica2098
library(OEFPIL)
library(OEFPIL)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
?person
example("NanoIndent.OEFPIL")
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
library(OEFPIL)
